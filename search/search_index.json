{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to the Blueprint docs","text":"<p>Blueprints are customizable workflows that help developers build AI applications using open-source tools and models</p> <p>These docs are your companion to mastering this Blueprint.</p>"},{"location":"#built-with","title":"Built with","text":"<ul> <li>Python 3.10+</li> <li>Tool 1</li> <li>Tool 2</li> </ul>"},{"location":"#get-started-quickly","title":"\ud83d\ude80 Get Started Quickly","text":""},{"location":"#start-building-the-blueprint-in-minutes","title":"Start building the Blueprint in minutes:","text":"<ul> <li>Getting Started: Quick setup and installation instructions.</li> </ul>"},{"location":"#understand-the-system","title":"\ud83d\udd0d Understand the System","text":""},{"location":"#dive-deeper-into-how-the-blueprint-works","title":"Dive deeper into how the Blueprint works:","text":"<ul> <li>Step-by-Step Guide: A detailed breakdown of the system\u2019s design and workflow.</li> <li>API Reference: Explore the technical details of the core modules.</li> </ul>"},{"location":"#make-it-yours","title":"\ud83c\udfa8 Make It Yours","text":""},{"location":"#customize-the-blueprint-to-fit-your-needs","title":"Customize the Blueprint to fit your needs:","text":"<ul> <li>Customization Guide: Tailor project parameters to fit your needs</li> </ul>"},{"location":"#join-the-community","title":"\ud83c\udf1f Join the Community","text":""},{"location":"#help-shape-the-future-of-blueprints","title":"Help shape the future of Blueprints:","text":"<ul> <li>Future Features &amp; Contributions: Learn about exciting upcoming features and how to contribute to the project.</li> </ul> <p>Have more questions? Reach out to us on Discord and we'll see how we can help:</p> <p></p>"},{"location":"#why-blueprints","title":"Why Blueprints?","text":"<p>Blueprints are more than starter code\u2014they\u2019re your gateway to building AI-powered solutions with confidence. With step-by-step guidance, modular design, and open-source tools, we make AI accessible for developers of all skill levels.</p>"},{"location":"api/","title":"API Reference","text":"<p>\"::: blueprint.hello\"</p>"},{"location":"customization/","title":"\ud83c\udfa8 Customization Guide","text":"<p>This Blueprint is designed to be flexible and easily adaptable to your specific needs. This guide will walk you through some key areas you can customize to make the Blueprint your own.</p>"},{"location":"customization/#changing-the-model","title":"\ud83e\udde0 Changing the Model","text":""},{"location":"customization/#modifying-the-system-prompt","title":"\ud83d\udcdd Modifying the system Prompt","text":""},{"location":"customization/#other-customization-ideas","title":"\ud83d\udca1 Other Customization Ideas","text":"<ul> <li>other ideas..</li> </ul>"},{"location":"customization/#contributing-to-the-blueprint","title":"\ud83e\udd1d Contributing to the Blueprint","text":"<p>Want to help improve or extend this Blueprint? Check out the Future Features &amp; Contributions Guide to see how you can contribute your ideas, code, or feedback to make this Blueprint even better!</p>"},{"location":"future-features-contributions/","title":"\ud83d\ude80 Future Features &amp; Contributions","text":"<p>This Blueprint is an evolving project designed to grow with the help of the open-source community. Whether you\u2019re an experienced developer or just starting, there are many ways you can contribute and help shape the future of this tool.</p>"},{"location":"future-features-contributions/#how-you-can-contribute","title":"\ud83c\udf1f How You Can Contribute","text":""},{"location":"future-features-contributions/#enhance-the-blueprint","title":"\ud83d\udee0\ufe0f Enhance the Blueprint","text":"<ul> <li>Check the Issues page to see if there are feature requests you'd like to implement</li> <li>Refer to our Contribution Guide for more details on contributions</li> </ul>"},{"location":"future-features-contributions/#extensibility-ideas","title":"\ud83c\udfa8 Extensibility Ideas","text":"<p>This Blueprint is designed to be a foundation you can build upon. By extending its capabilities, you can open the door to new applications, improve user experience, and adapt the Blueprint to address other use cases. Here are a few ideas for how you can expand its potential:</p> <p>We\u2019d love to see how you can enhance this Blueprint! If you create improvements or extend its capabilities, consider contributing them back to the project so others in the community can benefit from your work. Check out our Contributions Guide to get started!</p>"},{"location":"future-features-contributions/#share-your-ideas","title":"\ud83d\udca1 Share Your Ideas","text":"<p>Got an idea for how this Blueprint could be improved? You can share your suggestions through GitHub Discussions.</p>"},{"location":"future-features-contributions/#build-new-blueprints","title":"\ud83c\udf0d Build New Blueprints","text":"<p>This project is part of a larger initiative to create a collection of reusable starter code solutions that use open-source AI tools. If you\u2019re inspired to create your own Blueprint, you can use the Blueprint-template to get started.</p> <p>Your contributions help make this Blueprint better for everyone \ud83c\udf89</p>"},{"location":"getting-started/","title":"Getting Started","text":"<p>Get started with this Blueprint using one of the options below:</p>"},{"location":"getting-started/#option-1","title":"Option 1:","text":""},{"location":"getting-started/#option-2","title":"Option 2:","text":""},{"location":"step-by-step-guide/","title":"Step-by-Step Guide: How this Blueprint Works","text":""},{"location":"step-by-step-guide/#overview","title":"Overview","text":""},{"location":"step-by-step-guide/#step-1","title":"Step 1","text":""},{"location":"step-by-step-guide/#step-2","title":"Step 2","text":""},{"location":"step-by-step-guide/#step-3","title":"Step 3","text":""},{"location":"step-by-step-guide/#customizing-the-blueprint","title":"\ud83c\udfa8 Customizing the Blueprint","text":"<p>To better understand how you can tailor this Blueprint to suit your specific needs, please visit the Customization Guide.</p>"},{"location":"step-by-step-guide/#contributing-to-the-blueprint","title":"\ud83e\udd1d Contributing to the Blueprint","text":"<p>Want to help improve or extend this Blueprint? Check out the Future Features &amp; Contributions Guide to see how you can contribute your ideas, code, or feedback to make this Blueprint even better!</p>"},{"location":"template_guide/","title":"Guide on how to use the Blueprint Template","text":"<p>This documentation is intended for developers who want to create a new Blueprint using this template.</p>"},{"location":"template_guide/#guidelines","title":"Guidelines","text":"<p>[!NOTE] If the guidelines above do not align with your project, feel free to modify them to suit your needs. Keep in mind however that the aim of Blueprints is to provide strong foundations for reusable open-source AI workflows, meant to be shared by the community.</p>"},{"location":"template_guide/#directory-overview","title":"Directory Overview","text":"<pre><code>blueprint-template/\n\u251c\u2500\u2500 .devcontainer/          # Configuration for GitHub Codespaces\n\u251c\u2500\u2500 .github/                # GitHub workflows and issue templates\n\u251c\u2500\u2500 demo/                   # Demo application code\n\u251c\u2500\u2500 src/                    # Core Blueprint code\n\u251c\u2500\u2500 docs/                   # Documentation files\n\u251c\u2500\u2500 tests/                  # Unit and integration tests\n\u251c\u2500\u2500 .gitignore              # Add files you don't want to track in Git\n\u251c\u2500\u2500 .pre-commit-config.yaml # Pre-commit hooks configuration\n\u251c\u2500\u2500 CODE_OF_CONDUCT.md      # Code of conduct for contributors\n\u251c\u2500\u2500 CONTRIBUTING.md         # Contribution guidelines\n\u251c\u2500\u2500 LICENSE                 # License file for the project\n\u251c\u2500\u2500 mkdocs.yml              # MkDocs configuration for documentation\n\u251c\u2500\u2500 pyproject.toml          # Project dependencies and configuration\n\u251c\u2500\u2500 README.md               # Project overview and quick start guide\n</code></pre>"},{"location":"template_guide/#first-steps","title":"First steps","text":""},{"location":"template_guide/#1-replace-any-templated-mentions-with-your-blueprints-project-name","title":"1. Replace any templated mentions with your Blueprint's project name","text":"<p>You will find mentions of <code>blueprint-template</code> in multiple files throughout the repository. You should replace these with your Blueprint's project name.</p> <p>The easiest way to do this is to use a text editor / IDE (VS Code, PyCharm, etc.) that supports find-and-replace across files and look for <code>blueprint-template</code> and replace it with your desired Blueprint name.</p>"},{"location":"template_guide/#2-update-the-pyprojecttoml-file","title":"2. Update the <code>pyproject.toml</code> file","text":"<p>Make sure that the <code>pyproject.toml</code> file reflects the correct project name, version, description, and author information. Most importantly, you should define the dependencies your Blueprint requires in the <code>[tool.poetry.dependencies]</code> section.</p>"},{"location":"template_guide/#3-remove-any-files-or-directories-that-are-not-relevant-to-your-blueprint","title":"3. Remove any files or directories that are not relevant to your Blueprint","text":"<p>To keep your Blueprint repository clean and focused, you can remove any files or directories that are not relevant to your project. For example, if you don't plan to use GitHub Codespaces, you can remove the <code>.devcontainer</code> directory. Similarly, if you are not going to use GitHub workflows, you can remove the <code>.github/workflows</code> directory to remove the automated checks.</p>"},{"location":"template_guide/#4-update-the-demo-application-and-all-the-related-files","title":"4. Update the demo application and all the related files","text":"<p>By default, there is a placeholder demo application using streamlit in the <code>demo</code> directory. If you are not comfortable with streamlit, you can replace it with a demo application using any framework you prefer (e.g., Gradio, Marimo, etc.). Make sure to update the <code>demo/Dockerfile</code>, <code>demo/run.sh</code> and <code>.github/setup.sh</code> (if you want to have support for GitHub Codespaces), accordingly if you are using a different framework.</p>"},{"location":"template_guide/#5-update-the-documentation-files","title":"5. Update the documentation files","text":"<p>Make sure to go through each markdown file in the <code>docs</code> directory and update the content to reflect your Blueprint's functionality and features. Ensure that the <code>api.md</code> is edited to point to the correct modules and functions in your <code>src</code> directory. You can use the <code>mkdocs.yml</code> file to configure how the documentation is built and displayed.</p>"},{"location":"template_guide/#explaining-the-directory-structure","title":"Explaining the Directory Structure","text":""},{"location":"template_guide/#devcontainer","title":"<code>.devcontainer</code>","text":"<p>This .json includes the configuration for a GitHub codespaces container. This can be useful if your demo has low hardware requirements and can be run in an isolated container environment. It allows users to quickly set up a development environment with all necessary dependencies pre-installed and run the demo without needing to install anything locally.</p> <p>[!TIP] The <code>devcontainer.json</code> file points to the .github/setup.sh script that installs the required dependencies of the Blueprint and sets up the environment. Make sure to update this script accordingly.</p>"},{"location":"template_guide/#github","title":"<code>.github</code>","text":"<p>This directory contains GitHub workflows for CI/CD, issue templates, and pull request templates.</p>"},{"location":"template_guide/#cicd-workflows","title":"CI/CD Workflows","text":"<p>The CI/CD workflows defined there are to automate: - building the documentation of the Blueprint with mkdocs - running the pre-commit hooks with pre-commit to ensure code quality and consistency (ruff, codespell, etc) - publish the code as a pip package to PyPI - running tests with defined in the <code>tests</code> directory with pytest</p> <p>NOTE: If you are not going to use some of these features, you can remove the corresponding files from the <code>.github/workflows</code> directory.</p>"},{"location":"template_guide/#rulesetjson","title":"Ruleset.json","text":"<p>GitHub provides a way to define repository rules through a <code>ruleset.json</code> file, specifically around branch protection (e.g. <code>main</code> branch must pass all tests before merging).</p> <p>If you want to use the provided ruleset, you will need to: 1. Go to your repository settings 2. Navigate to \"Rules/Rulesets\" 3. Click \"New Ruleset\" 4. Select \"Import a ruleset\" 5. Upload the <code>ruleset.json</code> file from this template</p>"},{"location":"template_guide/#demo","title":"<code>demo</code>","text":"<p>You can use any framework you prefer to build a quick demo application that showcases the functionality of your Blueprint. Feel free to check out some of our existing Blueprints to see how we implemented demos using Gradio, Streamlit or Marimo.</p>"},{"location":"template_guide/#docs","title":"<code>docs</code>","text":"<p>This directory contains markdown files that will be used to generate the documentation for your Blueprint using MkDocs. Make sure to go through each one and update the content to reflect your Blueprint's functionality and features.</p>"},{"location":"template_guide/#src","title":"<code>src</code>","text":"<p>Here is where the magic happens! Any core logic of your Blueprint should reside here. You can structure it as you see fit, but we recommend following a modular approach to keep your code organized and maintainable.</p>"},{"location":"template_guide/#tests","title":"<code>tests</code>","text":"<p>Following best practices, we recommend writing unit, integration and/or end-to-end tests for your Blueprint. This directory is where you can place your test files. You can use any testing framework you prefer, but we recommend using pytest since this template already comes with a GitHub action workflow for pytest already.</p>"},{"location":"template_guide/#pre-commit-configyaml","title":"<code>.pre-commit-config.yaml</code>","text":"<p>While developing your Blueprint, its good practice to install pre-commit (<code>pip install pre-commit</code> &amp; <code>pre-commit install</code>) to ensure code quality and consistency. This file contains the configuration for pre-commit hooks that will run automatically before each commit. It includes checks for code style, linting, and spell checking.</p>"},{"location":"template_guide/#pyprojecttoml","title":"<code>pyproject.toml</code>","text":"<p>This file is used to define the dependencies and configuration for your Blueprint. Make sure to update it with the necessary packages your Blueprint requires. This file is also used by the GitHub action workflow to build and publish your Blueprint as a pip package.</p>"}]}